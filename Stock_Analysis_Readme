# Stock-analysis
1.	Overview of Project: 

After that Steve loves the workbook that I prepared for him. At the click of a button, he can analyze an entire dataset. Now, he wants something little bit faster than this. In this project I am going to do some more research for his parents, he wants to expand the dataset to include the entire stock market over the last few years. Although my code works better for a dozen stocks, it might not work as well for thousands of stocks. And if it does, it may take a long time to execute. Now I am going to help Steve to make it faster.

Purpose of this analysis.
In this Analysis, I will edit, or refactor, the Module 2 solution code to loop through all the data one time in order to collect the same information that I did in this module while I was working through it. Then, I’ll determine whether refactoring my code successfully made the VBA script run faster. Finally, I’ll present a written analysis that explains my findings.



2.	Results: Using images and examples of your code, compare the stock performance between 2017 and 2018, as well as the execution times of the original script and the refactored script.
 
 


 

 

 
 Execution time for 2017
 
Execution time for 2018
3.	Summary: 
Advantages
•	One of the advantages of refactoring code was to increase or to make it run faster than before also there is Logical errors easily appear in well structure code that contains nested conditionals and loops.
•	In this Analysis, using Excel flow displays program logic in a more comprehensible way, basically you get the results quicker since the code are well organized.
•	VBA interpretation (Excel) of code can reveal patterns that are not easy to see in the source.
Disadvantages:
•	A long procedure which may contain the same lines of codes in several locations, changing the logic in order to eliminate the reputed lines.
•	A logical structure may be duplicated in two or more procedures (possibly via copy & paste coding). When detected, this logic is best moved to a new function and called from the other functions.
•	A complex unstructured code is usually best to split in several functions.


4.	How do these pros and cons apply to refactoring the original VBA script?
By Adding Comments to each step while coding, it makes easier to remember what your codes will be doing, as a Best Practices in coding or for any coding Writer. These are some of the advantages of using comments:
•	Commenting & Documentation,
•	Consistent Indentation,
•	Avoid Obvious Comments.
•	Code Grouping,
•	Consistent Naming Scheme,
•	DRY (Don't Repeat Yourself) Principle,
•	Avoid Deep Nesting,




